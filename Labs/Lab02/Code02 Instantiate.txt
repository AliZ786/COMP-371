// add 2 triangles
        // Top right triangle - translate by (0.5, 0.5, 0.5)
        // Scaling model by 0.25, notice negative value to flip Y axis
        glm::mat4 scalingMatrix = glm::scale(glm::mat4(1.0f), glm::vec3(0.25f, -0.250f, 0.25f));
        glm::mat4 translationMatrix = glm::translate(glm::mat4(1.0f), glm::vec3(0.5f, 0.5f, 0.0f));
        
        glm::mat4 worldMatrix = translationMatrix * scalingMatrix;
        
        glUniformMatrix4fv(worldMatrixLocation, 1, GL_FALSE, &worldMatrix[0][0]);
        glDrawArrays(GL_TRIANGLES, 0, 3);

        // Top left triangle - translate by (-0.5, 0.5, 0.5)
        translationMatrix = glm::translate(glm::mat4(1.0f), glm::vec3(-0.5f, 0.5f, 0.0f));
        worldMatrix = translationMatrix * scalingMatrix;
        
        glUniformMatrix4fv(worldMatrixLocation, 1, GL_FALSE, &worldMatrix[0][0]);
        glDrawArrays(GL_TRIANGLES, 0, 3);